<template>
	

	<unicloud-db ref="udb" v-slot:default="{data, pagination, loading, hasMore, error}"
	  where="parent_id==''"
	 collection="std-menus" field="">
	 <view>
	 <view class="index-box hideOnPc">
	 		<!-- #ifdef APP-NVUE -->
	 		<text class="index-text">导航栏</text>
	 		<!-- #endif -->
	 		<!-- #ifndef APP-NVUE -->
	 		<text class="index-text">导航栏</text>
	 		<!-- #endif -->
	 	</view>
	 
	  <view v-if="error">{{error.message}}</view>
	  <view  v-else-if="data">
	    <uni-list>
	      <uni-list-item v-for="(item, index) in data" :key="index" showArrow :clickable="true" @click="handleItemClick(item.menu_id)">
	        <view slot="body">
	          <!-- 此处默认显示为_id，请根据需要自行修改为其他字段 -->
	          <!-- 如果使用了联表查询，请参考生成的 admin 项目中 list.vue 页面的绑定字段的写法 -->
	          {{item.name}}
	        </view>
	      </uni-list-item>
	    </uni-list>
		
	  </view>
	  <uni-load-more :status="loading?'loading':(hasMore ? 'more' : 'noMore')"></uni-load-more>
	  <uni-fab ref="fab" horizontal="right" vertical="bottom" :pop-menu="false" @fabClick="fabClick" />
	  </view>
	</unicloud-db>
	

	
</template>
<script>
  export default {
    data() {
      return {
        loadMore: {
          contentdown: '',
          contentrefresh: '',
          contentnomore: ''
        }
      }
    },
    onPullDownRefresh() {
      this.$refs.udb.loadData({
        clear: true
      }, () => {
        uni.stopPullDownRefresh()
      })
    },
    onReachBottom() {
      this.$refs.udb.loadMore()
    },
    methods: {
      handleItemClick(menu_id) {
        uni.navigateTo({
          url: '/pages/views/doctorPage/detail?parent_id=' + menu_id
        })
      },
      fabClick() {
        // 打开新增页面
        uni.navigateTo({
          url: './add',
          events: {
            // 监听新增数据成功后, 刷新当前页面数据
            refreshData: () => {
              this.$refs.udb.loadData({
                clear: true
              })
            }
          }
        })
      }
    }
  }
</script>

<style>
	@import '../../../common/uni-nvue.css';
</style>